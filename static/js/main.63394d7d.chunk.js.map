{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Container/Container.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","initialState","name","number","state","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","className","style","button","Component","PropType","func","isRequired","Container","children","container","ContactItem","onDeleteContact","styleName","contactItem","buttonDel","onClick","prototype","PropTypes","string","ContactList","findContact","contactList","map","Filter","App","contacts","filter","addContact","hasContacts","alert","find","toLocaleLowerCase","lowerFilter","length","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63394d7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__3ZuRc\",\"buttonDel\":\"ContactItem_buttonDel__1vUyd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1M5Di\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__HberJ\"};","import React, { Component } from 'react';\r\nimport PropType from 'prop-types';\r\nimport style from './ContactForm.module.css'\r\nimport shortid from 'shortid';\r\n\r\n\r\nclass ContactForm extends Component {\r\n    initialState = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n    state = {\r\n        name: '',\r\n        number:'',\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({[name]:value})\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const contact = {\r\n            id: shortid.generate(),\r\n            name: this.state.name,\r\n            number: this.state.number,\r\n        }\r\n\r\n        this.props.onSubmit(contact);\r\n\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor={this.nameInputId}>\r\n                    Name\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                        id={this.nameInputId}/>\r\n                </label>\r\n                <label htmlFor={this.numberInputId}>\r\n                    Number\r\n                    <input\r\n                    type=\"tel\"\r\n                     name=\"number\"\r\n                     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                     title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                        id={this.numberInputId}\r\n                    /> \r\n                </label>\r\n                <button className={style.button} type=\"submit\">\r\n                    Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.PropType = {\r\n    onSubmit:PropType.func.isRequired,\r\n}\r\n\r\nexport default ContactForm;","import style from './Container.module.css'\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={style.container }>{children}</div>\r\n)\r\n\r\nexport default Container;","import style from './ContactItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\r\n    return (\r\n        \r\n        <li styleName={style.contactItem} >\r\n            {name}:   {number}\r\n            <button\r\n                className={style.buttonDel}\r\n                type=\"submit\"\r\n                onClick={( ) => onDeleteContact(id)}\r\n            >\r\n                Delete\r\n            </button>\r\n            </li>\r\n           \r\n    );\r\n};\r\n\r\nContactItem.prototype = {\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.number.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from '../ContactItem/ContactItem';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = ({ findContact, onDeleteContact }) => {\r\n    return (\r\n        <ul className={style.contactList} >\r\n            {findContact().map(({ id, name, number }) => {\r\n                return (\r\n                    <ContactItem\r\n                        key={id}\r\n                        id={id}\r\n                        name={name}\r\n                        number={number}\r\n                        onDeleteContact={onDeleteContact} />\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.prototype = {\r\n    findContact: PropTypes.func.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={this.props.value}\r\n          onChange={this.props.onChange}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Container from './components/Container'\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\n\nclass App extends Component {\n\n state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n };\n  \n   // localStorage перезаписываем state\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(contacts)\n    \n// Do check\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n    \n  }\n \n// add LocalStorage\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      \n      localStorage.setItem('contacts',JSON.stringify(this.state.contacts))\n    }\n\n    \n  }\n\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value })\n  };\n\n  addContact = contact => {\n    if (!this.hasContacts(contact.name)) {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n\n    } else {\n      alert(`${contact.name} is already in contacts`);\n    }\n  };\n  \n  \n  hasContacts = name => {\n    return this.state.contacts.find(contact => {\n      return contact.name.toLocaleLowerCase() === name.toLocaleLowerCase();\n    });\n  };\n  \n  findContact = () => {\n    const { filter, contacts } = this.state;\n    const lowerFilter = filter.toLocaleLowerCase();\n\n    if (filter.length) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(lowerFilter));\n    } else { return contacts; }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts:prevState.contacts.filter(contact=>contact.id!==contactId),\n    }))\n  }\n\n\n\n  render() {\n    return (\n      <Container>  \n  <h1>Phonebook</h1>\n  <ContactForm onSubmit={this.addContact} />\n<div>\n  <h2>Contacts</h2>\n  <Filter value={this.state.filter} onChange={this.handleChange}  />\n  <ContactList findContact={this.findContact}\n            onDeleteContact={this.deleteContact}/>\n</div>\n</Container> \n    )\n  }\n}\n export default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}